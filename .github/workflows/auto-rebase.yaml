name: Rebase Pull Requests

on:
  repository_dispatch:
    types: [Trigger-rebase]
  push:
    branches:
      - main
permissions:
  contents: write
    
jobs:
  check-and-rebase:
    runs-on: ubuntu-latest
    steps:
      - name: Call repository dispatch event
        if: ${{ github.event_name == 'push' }}
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "Trigger-rebase"}'
          
      - name: Checkout Code
        if: ${{ github.event_name == 'repository_dispatch' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # We need full commit history for rebase

      - name: Get branch to rebase
        if: ${{ github.event_name == 'repository_dispatch' }}
        id: get-rebase-branch
        uses: actions/github-script@v7
        with:
          script: |            
            let pr = null;
            let page = 1;
            let perPage = 100;

            while (!pr) { // Loop until find PR to rebase, or no more PRs to check
              const prs = await github.rest.pulls.list({
                owner: context.repo.owner,
                repo: context.repo.repo,
                sort: 'created',
                direction: 'asc',
                per_page: perPage,
                page: page
              });
              
              for (const potentialPR of prs.data) {
                const prDetails = await github.rest.pulls.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: potentialPR.number
                });
                console.log(prDetails);
                if (
                  prDetails.data.auto_merge !== null &&
                  prDetails.data.labels.some(label => label.name === 'auto-rebase') &&
                  prDetails.data.rebaseable
                ) {
                  pr = potentialPR;
                  break;
                }
              }
              
              if (prs.data.length < perPage) {
                break;
              }
              page += 1;
            }
            if (pr) {
              console.log('PR to rebase: ' + pr.html_url);
              const test = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number
              })
              console.log(test);
              core.notice('PR to rebase: ' + pr.html_url);
              core.setOutput('BRANCH', pr.head.ref);
            } else {
              console.log('No PR to rebase');
              core.notice('No PR to rebase.')
              core.setOutput('BRANCH', '');
            }
            
      - name: Set Git user details
        if: ${{ steps.get-rebase-branch.outputs.BRANCH != '' }}
        run: |
          git config --local user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git config --local user.name 'github-actions[bot]'
          
      - name: Rebase
        if: ${{ steps.get-rebase-branch.outputs.BRANCH != '' }}
        run: |
          branch=${{ steps.get-rebase-branch.outputs.BRANCH }}
          git fetch origin $branch
          git checkout $branch
          git rebase origin/main
          git push origin $branch --force-with-lease
