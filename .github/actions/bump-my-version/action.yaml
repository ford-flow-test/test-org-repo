name: Bump My Version
description: Bump version of a project
inputs:
  bump-type:
    description: 'SemVer version type to bump [major/minor/patch]'
    required: true
    default: 'auto'
  github-token:
    description: 'GitHub Token to use instead of the default one.'
    required: false
    default: ${{ github.token }}
  branch:
    description: 'Destination branch to push changes.'
    required: false
    default: ${{ github.ref }}
  git-email:
    description: 'Email of Git account to commit as'
    required: false
    default: ${GITHUB_ACTOR_ID}+${GITHUB_ACTOR}@users.noreply.github.com
  git-username:
    description: 'Username of Git account to commit as'
    required: false
    default: $(gh api /users/${GITHUB_ACTOR} | jq .name -r)
outputs:
  bumped:
    description: 'Whether there was a bump or not [true|false]'
    value: ${{ steps.bump.outputs.bumped }}
  previous-version:
    description: 'Previous version'
    value: ${{ steps.bump.outputs.previous-version }}
  current-version:
    description: 'Updated version'
    value: ${{ steps.bump.outputs.current-version }}
  version-type:
    description: 'SemVer version type [major/minor/patch]'
    value: ${{ steps.type.outputs.version-type}}
runs:
  using: 'composite'
  steps:
    - name: Checkout the code
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        fetch-depth: 0
        fetch-tags: true

    - name: Setting up git config
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.github-token }}
      run: |
        git config --global user.email "${{ inputs.git-email }}"
        git config --global user.name "${{ inputs.git-username }}"
        git config -l
        touch ${{ github.workspace }}/requirements.txt
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'
    - name: Get next version
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        ACTION_PATH: ${{ github.action_path }}
      run: |
        cd ${{ github.action_path }}
        pip install -r requirements.txt
        python script.py
    - name: Get SemVer version type
      id: type
      shell: bash
      run: |
        echo "GITHUB_TOKEN=${{ inputs.github-token }}" >> $GITHUB_ENV
        echo "ACTION_PATH=${{ github.action_path }}" >> $GITHUB_ENV
        echo ${{ github.action_path }}
        bash ${{ github.action_path }}/get-commit-type.sh
        echo "version-type=$(bash ${{ github.action_path }}/get-commit-type.sh)" >> $GITHUB_OUTPUT
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        ACTION_PATH: ${{ github.action_path }}
    - name: Get version
      shell: bash
      run: |
        release=$(echo ${{ github.ref }} | sed 's|^refs/tags/||')
        if [[ $release == release/* ]]; then
          new_version=$(echo 'release/3.1.2' | cut -d'/' -f2)
          echo $new_version
        else
          exit 1
        fi

        old_version=$(cat ${{ github.workspace }}/version)
        if dpkg --compare-versions $new_version gt $old_version; then
          echo yes
          echo $new_version > version
        else
          echo no
          exit 1
        fi

    - name: Install bump-my-version
      shell: bash
      run: pip install "bump-my-version==1.1.4"
    - name: Pass Inputs to Shell
      id: bump
      shell: bash
      run: |
        echo "previous-version=$(bump-my-version show current_version)" >> $GITHUB_OUTPUT
        if [[ "${{ inputs.bump-type }}" == "auto" ]]; then
          bump-my-version bump ${{ steps.type.outputs.version-type}}
        else
          bump-my-version bump ${{ inputs.bump-type }}
        fi
        ([[ $? -gt 0 ]] && echo "bumped=false" || echo "bumped=true") >> $GITHUB_OUTPUT
        echo "current-version=$(bump-my-version show current_version)" >> $GITHUB_OUTPUT
    - name: Push changes to GitHub
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ inputs.github-token }}
        branch: ${{ inputs.branch }}
        force: true